# helmchart/templates/deployment.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-app
  namespace: {{ .Values.namespace }}
  labels:
    app: go-app
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: go-app
  template:
    metadata:
      labels:
        app: go-app
    spec:
{{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
{{- end }}
      containers:
      - name: go-app-container
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        resources:
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}
        ports:
          - containerPort: {{ .Values.containerPort }}

        # (1) If logging.enabled => set LOG_FILE env from ConfigMap
{{- if .Values.logging.enabled }}
        env:
          - name: LOG_FILE
            valueFrom:
              configMapKeyRef:
                name: go-app-logs-config
                key: LOG_FILE
{{- end }}

        # (2) Probes
        livenessProbe:
          httpGet:
            path: {{ .Values.livenessProbe.path }}
            port: {{ .Values.containerPort }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}

        readinessProbe:
          httpGet:
            path: {{ .Values.readinessProbe.path }}
            port: {{ .Values.containerPort }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}

        # (3) Mount the PVC if logging + persistentVolume
{{- if and .Values.logging.enabled .Values.logging.persistentVolume.enabled }}
        volumeMounts:
          - name: logs-volume
            mountPath: "/app/logs"
{{- end }}

{{- if and .Values.logging.enabled .Values.logging.persistentVolume.enabled }}
      volumes:
        - name: logs-volume
          persistentVolumeClaim:
            claimName: go-app-logs-pvc
{{- end }}
